@IF	@IsDefined("__BUILD_ONE__") == 0
Include	"yosuga.ch"
@ENDIF

Function AppreciationView::cgProc(Reference wscmd)
	Integer id := true
	Array aParam
	If (IsUNK1)
	ElseIf (wscmd.strFullID.IsMatchUsage("&ID_PAGE_TAG&(<0-9>*)&\\\\ID_TAG&", aParam) == "")
		Integer tag := (0 := aParam[0]) - 1
		If (this.sprTag[tag].IsButtonChecked("ID_PAGE1") == true)
			setPage(tag, 0)
		ElseIf (this.sprTag[tag].IsButtonChecked("ID_PAGE2") == true)
			setPage(tag, 1)
		ElseIf (this.sprTag[tag].IsButtonChecked("ID_PAGE3") == true)
			setPage(tag, 2)
		ElseIf (this.sprTag[tag].IsButtonChecked("ID_REC") == true)
			setPage(tag, 3)
		EndIf
	ElseIf (wscmd.strID.IsMatchUsage("&ID_PAGE_TAG&(<0-9>*)&\\\\ID_PAGE&(<0-9>*)", aParam) == "")
		setPage((0 := aParam[0]) - 1, (0 := aParam[1]) - 1)
	ElseIf (wscmd.strID.IsMatchUsage("&ID_PAGE_TAG&(<0-9>*)&\\\\ID_REC&", aParam) == "")
		setPage((0:= aParam[0]) - 1, 3)
	ElseIf (wscmd.strID.IsMatchUsage("&ID_CGSEL&(<0-9>*)", aParam) == "")
		id :=(0 := aParam[0]) - 1
	Else
		Return 0
	EndIf
    If (id != true)
        showCgLoop(this.selTag, this.selPage * 12 + id)
    EndIf
	screen.FlushCommandQueue(true)
	Return true
EndFunc

Function AppreciationView::checkHitCg(Integer id)
	Integer length := this.cgViewMan[id].thumbInfo.GetLength()
	Integer i := 0
	While (i < length)
        If (CheckCgFlag(this.cgViewMan[id].thumbInfo[i].flag))
            Break
        EndIf
        i += 1
    EndWhile
    If (i == length)
        Return true
    EndIf
    Return i
EndFunc

Function AppreciationView::checkPaletteCg(Integer flag, Integer id, String spriteID)
	If (CheckCgFlag(flag) == true)
        this.sprThumbBase.SetTransparency(0, "ID_CG" + ("" := id))
        this.sprThumbBase.SetTransparency(0, "ID_CGSEL" + ("" := id))
        this.sprThumbBase.SetSpriteImage("ID_CG" + ("" := id), "ID_" + spriteID)
    Else
        this.sprThumbBase.SetTransparency(0, "ID_CG" + ("" := id))
        this.sprThumbBase.SetSpriteImage("ID_CG" + ("" := id), "ID_FRM_0733")
    EndIf
EndFunc

Function AppreciationView::hide(Integer fWait)
	this.sprBase.SetBlendingEnvelope(256)
	this.sprBase.BeginActivation(500)
	If (fWait == true)
		WaitUntilSpriteActive(this.sprBase, true)
	EndIf
EndFunc

Function AppreciationView::show()
	this.sprScroll.SetBlendingEnvelope(256)
	this.sprScroll.BeginActivation(300)
	this.sprBase.SetBlendingEnvelope(0)
	this.sprBase.BeginActivation(500)
EndFunc

Function AppreciationView::startRecollect(String scenario)
	Integer flag := this.isPlayBgm
	stopBgm()
	adv.setCg("BLACK")
	adv.bustupClear()
	adv.update(true)
	hide(true)
	destroy()
	cnfObj.flgPlayBgm := this.cnfPlayBgm
	InitScenarioData()
	ScenarioLoop(scenario)
	cnfObj.flgPlayBgm := true
	create(this.selTag, this.selPage, this.selPlayBgm)
	SetupAdvScreen()
	show()
	this.isPlayBgm := flag
EndFunc

Function AppreciationView::stopBgm()
	StopBgm(true)
	this.isPlayBgm := 0
EndFunc

Function AppreciationView::checkPaletteRecollect(Integer flag, Integer id, String spriteID)
	If (ChkRecollectFlag(flag) == true)
		this.sprThumbBase.SetTransparency(0, "ID_REC" + ("" := id))
		this.sprThumbBase.SetTransparency(0, "ID_RECSEL" + ("" := id))
		this.sprThumbBase.SetSpriteImage("ID_REC" + ("" := id), "ID_" + spriteID)
	Else
		this.sprThumbBase.SetTransparency(0, "ID_REC" + ("" := id))
		this.sprThumbBase.SetSpriteImage("ID_REC" + ("" := id), "ID_FRM_0735")
	EndIf
EndFunc

Function AppreciationView::destroy()
	this.sprBase.DetachAllSprite()
	screen.DetachSprite(this.sprBase)
	screen.DetachSprite(this.sprScroll)
	this.sprBase.Release()
	this.sprTag.Remove()
	this.sprThumbBase.Release()
	this.sprMusic.Release()
	this.sprScroll.Release()
	this.optionSkin.DeleteContents()
EndFunc

Function AppreciationView::create(Integer tagID, Integer pageID, Integer bgm)
	this.optionSkin.LoadResource("option.noa")
	this.sprBase.CreateSprite(67108865, 800, 600)
	this.sprBase.SetTransparency(256)
	this.sprBase.SetVisible(true)
	screen.AddSprite(50400, this.sprBase)
	this.sprBack.AttachImage(this.optionSkin.ID_FRM_0701)
	this.sprBack.SetVisible(true)
	this.sprBase.AddSprite(100, this.sprBack)
	this.sprTitle.AttachImage(this.optionSkin.ID_FRM_0702)
	this.sprTitle.MovePosition(5, 6)
	this.sprTitle.SetVisible(true)
	this.sprBase.AddSprite(5, this.sprTitle)
	For i:=0 To 5
		this.sprTag[i] := Sprite
		this.optionSkin.CreateFormPage(this.sprTag[i], "ID_PAGE_TAG"  + ("" := i + 1))
		this.sprTag[i].SetVisible(true)
		this.sprTag[i].CheckButton("ID_PAGE1", true)
		this.sprBase.AddSprite(10 + i, this.sprTag[i])
	Next
	this.optionSkin.CreateFormPage(this.sprThumbBase, "ID_PAGE_THUMB")
	ImageInfo info
	info:= this.sprThumbBase.GetInfo()
	SpriteParam param
	this.sprThumbBase.GetParameter(param)
	param.ptRevCenter := IPoint(info.nImageWidth / 2, 0)
	this.sprThumbBase.SetParameter(param)
	this.sprThumbBase.SetVisible(true)
	this.sprBase.AddSprite(30, this.sprThumbBase)
	this.optionSkin.CreateFormPage(this.sprMusic, "ID_PAGE_MUSIC")
	this.sprMusic.MovePosition(534, 38)
	this.sprMusic.CheckButton("ID_STOP", true)
	this.sprMusic.SetVisible(true)
	this.sprBase.AddSprite(50, this.sprMusic)
	If (bgm == true)
		this.sprMusic.CheckButton("ID_STOP", true)
	Else
		playBgm(bgm)
		this.sprMusic.CheckButton("ID_BGM" + ("" := (bgm + 1)), true)
	EndIf
	this.optionSkin.CreateFormPage(this.sprScroll, "ID_PAGE_SCROLL")
	info := this.sprScroll.GetInfo()
	this.sprScroll.MovePosition((800 - info.nImageWidth) / 2, 550)
	this.sprScroll.SetHorzScrollRange(100, "ID_SCROLL")
	this.sprScroll.SetHorzScrollPos(0, "ID_SCROLL")
	this.sprScroll.SetTransparency(256)
	this.sprScroll.SetVisible(true)
	screen.AddSprite(50410, this.sprScroll)
	this.selTag := true
	this.selPage := true
	setPage(tagID, pageID, true)
EndFunc

Function AppreciationView::playBgm(Integer id)
	String file
	If (IsUNK1)
	Elseif (id == 0)
		file := "BGM01"
	ElseIf (id == 1)
		file := "BGM03"
	ElseIf (id == 2)
		file := "BGM04"
	ElseIf (id == 3)
		file := "BGM05"
	ElseIf (id == 4)
		file := "BGM06"
	ElseIf (id == 5)
		file := "BGM07"
	ElseIf (id == 6)
		file := "BGM08"
	ElseIf (id == 7)
		file := "BGM09"
	ElseIf (id == 8)
		file := "BGM10"
	ElseIf (id == 9)
		file := "BGM11"
	ElseIf (id == 10)
		file := "BGM12"
	ElseIf (id == 11)
		file := "BGM13"
	ElseIf (id == 12)
		file := "BGM14"
	ElseIf (id == 13)
		file := "BGM15"
	ElseIf (id == 14)
		file := "BGM16"
	ElseIf (id == 15)
		file := "BGM17"
	ElseIf (id == 16)
		file := "BGM18"
	ElseIf (id == 17)
		file := "BGM19"
	ElseIf (id == 18)
		file := "BGM20"
	ElseIf (id == 19)
		file := "BGM21"
	ElseIf (id == 20)
		file := "BGM02_S"
	Else
		Return
	EndIf
	PlayBgm(file, true)
	this.selPlayBgm := id
	this.isPlayBgm := true
EndFunc

Function AppreciationView::playerProc(Reference wscmd)
	If (IsUNK1)
	Elseif (wscmd.strID == "ID_STOP")
		If (IsPlayBgm())
			stopBgm()
			this.selPlayBgm := true
		EndIf
	Elseif (wscmd.strID == "ID_BGM1")
		playBgm(0)
	Elseif (wscmd.strID == "ID_BGM2")
		playBgm(1)
	Elseif (wscmd.strID == "ID_BGM3")
		playBgm(2)
	Elseif (wscmd.strID == "ID_BGM4")
		playBgm(3)
	Elseif (wscmd.strID == "ID_BGM5")
		playBgm(4)
	Elseif (wscmd.strID == "ID_BGM6")
		playBgm(5)
	Elseif (wscmd.strID == "ID_BGM7")
		playBgm(6)
	Elseif (wscmd.strID == "ID_BGM8")
		playBgm(7)
	Elseif (wscmd.strID == "ID_BGM9")
		playBgm(8)
	Elseif (wscmd.strID == "ID_BGM10")
		playBgm(9)
	Elseif (wscmd.strID == "ID_BGM11")
		playBgm(10)
	Elseif (wscmd.strID == "ID_BGM12")
		playBgm(11)
	Elseif (wscmd.strID == "ID_BGM13")
		playBgm(12)
	Elseif (wscmd.strID == "ID_BGM14")
		playBgm(13)
	Elseif (wscmd.strID == "ID_BGM15")
		playBgm(14)
	Elseif (wscmd.strID == "ID_BGM16")
		playBgm(15)
	Elseif (wscmd.strID == "ID_BGM17")
		playBgm(16)
	Elseif (wscmd.strID == "ID_BGM18")
		playBgm(17)
	Elseif (wscmd.strID == "ID_BGM19")
		playBgm(18)
	Elseif (wscmd.strID == "ID_BGM20")
		playBgm(19)
	Elseif (wscmd.strID == "ID_BGM21")
		playBgm(20)
	Else
		Return false
	EndIf
	screen.FlushCommandQueue(true)
	Return true
EndFunc

Function AppreciationView::resetThumbBase()
	For i:=0 To 11
		this.sprThumbBase.SetTransparency(256, "ID_CG" + ("" := i + 1))
		this.sprThumbBase.SetTransparency(256, "ID_CGSEL" + ("" := i + 1))
	Next
	For i:=0 To 5
		this.sprThumbBase.SetTransparency(256, "ID_REC" + ("" := i + 1))
		this.sprThumbBase.SetTransparency(256, "ID_RECSEL" + ("" := i + 1))
	Next
EndFunc

Function AppreciationView::recollectProc(Reference wscmd)
	Integer id := true
	Array aParam
	If (IsUNK1)
	Elseif (wscmd.strID.IsMatchUsage("&ID_RECSEL&(<0-9>*)", aParam) == "")
		id := (0 := aParam[0]) - 1
		If (IsUNK1)
		ElseIf ((this.selTag == 0) & (id == 0))
			startRecollect("00_A020")
		ElseIf ((this.selTag == 0) & (id == 1))
			startRecollect("00_A022")
		ElseIf ((this.selTag == 0) & (id == 2))
			startRecollect("00_A025B")
		ElseIf ((this.selTag == 0) & (id == 3))
			startRecollect("00_A026")
		ElseIf ((this.selTag == 0) & (id == 4))
			startRecollect("00_A032")
		ElseIf ((this.selTag == 1) & (id == 0))
			startRecollect("00_B005")
		ElseIf ((this.selTag == 1) & (id == 1))
			startRecollect("00_B021")
		ElseIf ((this.selTag == 1) & (id == 2))
			startRecollect("00_B025")
		ElseIf ((this.selTag == 1) & (id == 3))
			startRecollect("00_B032")
		ElseIf ((this.selTag == 2) & (id == 0))
			startRecollect("00_C019B")
		ElseIf ((this.selTag == 2) & (id == 1))
			startRecollect("00_C023")
		ElseIf ((this.selTag == 2) & (id == 2))
			startRecollect("00_C034")
		ElseIf ((this.selTag == 3) & (id == 0))
			startRecollect("00_D025B")
		ElseIf ((this.selTag == 3) & (id == 1))
			startRecollect("00_D028B")
		ElseIf ((this.selTag == 3) & (id == 2))
			startRecollect("00_D042B")
		ElseIf ((this.selTag == 4) & (id == 0))
			startRecollect("00_E013C")
		ElseIf ((this.selTag == 4) & (id == 1))
			startRecollect("00_E024B")
		ElseIf ((this.selTag == 4) & (id == 2))
			startRecollect("00_E036")
		EndIf
	Else
		Return false
	Endif
	screen.FlushCommandQueue(true)
	Return true
EndFunc

Function AppreciationView::run()
	this.cnfPlayBgm := cnfObj.flgPlayBgm
	cnfObj.flgPlayBgm := true
	SetupAdvScreen()
	show()
	input.FlushJoyButtonPushed()
	screen.FlushCommandQueue(true)
	WndSpriteCmd wscmd
	While (true)
		GetCommand(wscmd, 33)
		If (IsUNK1)
		ElseIf (input.GetJoyButtonPushed(5) > 0)
			Break
		ElseIf (cgProc(wscmd))
		ElseIf (recollectProc(wscmd))
		ElseIf (playerProc(wscmd))
		Endif
	EndWhile
	adv.setCg("BLACK")
	adv.bustupClear()
	adv.update(true)
	DestroyAdvScreen()
	hide(true)
	StopBgm(true)
	cnfObj.flgPlayBgm := this.cnfPlayBgm
EndFunc

Function AppreciationView::setBustupInfo(Reference info, String buFile, Integer pos, Integer priority)
	Integer index := info.GetLength() - 1
	Integer iBustup := info[index].buList.GetLength()
	info[index].buList[iBustup] := BustupViewInfo
	Reference rBustup := info[index].buList[iBustup]
	rBustup.file := buFile
	rBustup.pos := pos
	rBustup.priority := priority
EndFunc

Function AppreciationView::setCgInfo(Reference info, Integer flag, String cgFile, String buFile, Reference pt1, Reference pt2)
	Integer index := info.GetLength()
	info[index] := CgViewInfo
	info[index].flag := flag
	info[index].cgFile := cgFile
	If (pt1.GetType() == "Point")
		info[index].ptCg1 := pt1
	Else
		info[index].ptCg1 := IPoint(0, 0)
	EndIf
	If (pt2.GetType() == "Point")
		info[index].ptCg2 := pt2
		info[index].fScroll := true
	Else
		info[index].fScroll := false
	EndIf
	If (buFile != "")
		setBustupInfo(info, buFile)
	EndIf
EndFunc

Function AppreciationView::setPage(Integer tagID, Integer pageID, Integer fFlush)
	If ((this.selTag == tagID) & (this.selPage == pageID))
		Return false
	EndIf
	screen.Lock()
	If (this.selTag != tagID)
		this.cgViewMan.Remove()
	Endif
	setCgPalette(tagID, pageID)
	SpriteParam param
	Bezier2D bzMov
	Bezier2D bzMag
	Integer y := 38
	For i:=0 To 5
		this.sprTag[i].GetParameter(param)
		bzMov.SetLinear(param.ptDstPos.x, param.ptDstPos.y, 5, y)
		bzMov.SetAcceleration(3.0, 0)
		this.sprTag[i].SetBezierCurve(bzMov)
		y += 38
		If (tagID == i)
			this.sprThumbBase.GetParameter(param)
			bzMov.SetLinear(270, param.ptDstPos.x, 270, y)
			bzMov.SetAcceleration(3.0, 0)
			bzMag.SetLinear(1.0, 0.0, 1.0, 1.0)
			bzMag.SetAcceleration(3.0, 0)
			If (this.selTag != tagID)
				this.sprThumbBase.SetBezierCurve(bzMov, Reference, bzMag)
			EndIf
			this.sprThumbBase.SetTransparency(128)
			this.sprThumbBase.SetBlendingEnvelope(0)
			y += 312
		Endif
	Next
	For i:=0 To 5
		this.sprTag[i].BeginActivation(500)
		If (fFlush)
			this.sprTag[i].FlushActivation()
		EndIf
	Next
	this.sprThumbBase.BeginActivation(500)
	If (fFlush)
		this.sprThumbBase.FlushActivation()
	EndIf
	screen.Unlock()
	this.selTag := tagID
	this.selPage := pageID
EndFunc

Function AppreciationView::showCg(Reference info, Integer fFlush)
	fFlush |= (cnfObj.screenEffect == 1)
	adv.bustupClear()
	this.fScroll := info.fScroll
	If (fFlush == false)
		If (this.fScroll == true)
			this.sprScroll.SetBlendingEnvelope(0)
		Else
			this.sprScroll.SetBlendingEnvelope(256)
		EndIf
		this.sprScroll.BeginActivation(300)
	ElseIf (this.fScroll == true)
		this.sprScroll.SetTransparency(0)
	Else
		this.sprScroll.SetTransparency(256)
	EndIf
	this.sprScroll.SetHorzScrollPos(0, "ID_SCROLL")
	this.scrollT := 0.0
	adv.setCg(info.cgFile, info.ptCg1.x, info.ptCg1.y)
	If (info.buList.GetLength() != 0)
		For i:=0 To (info.buList.GetLength() - 1)
			adv.setBustup(info.buList[i].file, info.buList[i].pos, info.buList[i].priority)
		Next
	EndIf
	adv.update(fFlush)
EndFunc

Function AppreciationView::setCgPalette(Integer tagID, Integer page)
	resetThumbBase()
	Integer cgNum := 0
	If (tagID == 0)
		cgNum := 23
		If (page == 0)
			checkPaletteCg(1, 1, "CA01")
			checkPaletteCg(2, 2, "CA02")
			checkPaletteCg(3, 3, "CA03")
			checkPaletteCg(4, 4, "CA04")
			checkPaletteCg(6, 5, "CA06")
			checkPaletteCg(5, 6, "CA05")
			checkPaletteCg(7, 7, "CA07")
			checkPaletteCg(100, 8, "EA01")
			checkPaletteCg(110, 9, "EA02")
			checkPaletteCg(120, 10, "EA03")
			checkPaletteCg(130, 11, "EA04")
			checkPaletteCg(140, 12, "EA05")
		ElseIf (page == 1)
			checkPaletteCg(150, 1, "EA06")
			checkPaletteCg(160, 2, "EA07")
			checkPaletteCg(170, 3, "EA08")
			checkPaletteCg(180, 4, "EA09")
			checkPaletteCg(190, 5, "EA10")
			checkPaletteCg(200, 6, "EA11")
			checkPaletteCg(210, 7, "EA12")
			checkPaletteCg(220, 8, "EA13")
			checkPaletteCg(250, 9, "EA16")
			checkPaletteCg(260, 10, "EA17")
			checkPaletteCg(270, 11, "EA18")
		ElseIf (page == 3)
			checkPaletteRecollect(1, 1, "REC_SR1")
			checkPaletteRecollect(2, 2, "REC_SR2")
			checkPaletteRecollect(3, 3, "REC_SR3")
			checkPaletteRecollect(4, 4, "REC_SR4")
			checkPaletteRecollect(5, 5, "REC_SR5")
		EndIf
	ElseIf (tagID == 1)
		cgNum := 21
		If (page == 0)
			checkPaletteCg(11, 1, "CB01")
			checkPaletteCg(12, 2, "CB02")
			checkPaletteCg(13, 3, "CB03")
			checkPaletteCg(14, 4, "CB04")
			checkPaletteCg(16, 5, "CB06")
			checkPaletteCg(17, 6, "CB07")
			checkPaletteCg(280, 7, "EB01")
			checkPaletteCg(290, 8, "EB02")
			checkPaletteCg(300, 9, "EB03")
			checkPaletteCg(310, 10, "EB04")
			checkPaletteCg(320, 11, "EB05")
			checkPaletteCg(330, 12, "EB06")
		ElseIf (page == 1)
			checkPaletteCg(340, 1, "EB07")
			checkPaletteCg(350, 2, "EB08")
			checkPaletteCg(370, 3, "EB10")
			checkPaletteCg(380, 4, "EB11")
			checkPaletteCg(390, 5, "EB12")
			checkPaletteCg(400, 6, "EB13")
			checkPaletteCg(430, 7, "EB16")
			checkPaletteCg(440, 8, "EB17")
			checkPaletteCg(450, 9, "EB18")
		ElseIf (page == 3)
			checkPaletteRecollect(6, 1, "REC_NO1")
			checkPaletteRecollect(7, 2, "REC_NO2")
			checkPaletteRecollect(8, 3, "REC_NO3")
			checkPaletteRecollect(9, 4, "REC_NO4")
		EndIf
	Elseif (tagID == 2)
		cgNum := 22
		If (page == 0)
			checkPaletteCg(21, 1, "CC01")
			checkPaletteCg(22, 2, "CC02")
			checkPaletteCg(23, 3, "CC03")
			checkPaletteCg(26, 4, "CC06")
			checkPaletteCg(24, 5, "CC04")
			checkPaletteCg(28, 6, "CC08")
			checkPaletteCg(25, 7, "CC05")
			checkPaletteCg(27, 8, "CC07")
			checkPaletteCg(460, 9, "EC01")
			checkPaletteCg(470, 10, "EC02")
			checkPaletteCg(480, 11, "EC03")
			checkPaletteCg(500, 12, "EC05")
		ElseIf (page == 1)
			checkPaletteCg(510, 1, "EC06")
			checkPaletteCg(520, 2, "EC07")
			checkPaletteCg(540, 3, "EC09")
			checkPaletteCg(550, 4, "EC10")
			checkPaletteCg(560, 5, "EC11")
			checkPaletteCg(570, 6, "EC12")
			checkPaletteCg(580, 7, "EC13")
			checkPaletteCg(610, 8, "EC16")
			checkPaletteCg(620, 9, "EC17")
			checkPaletteCg(630, 10, "EC18")
		ElseIf (page == 3)
			checkPaletteRecollect(10, 1, "REC_AK1")
			checkPaletteRecollect(11, 2, "REC_AK2")
			checkPaletteRecollect(12, 3, "REC_AK3")
		EndIf
	ElseIf (tagID == 3)
		cgNum := 22
		If (page == 0)
			checkPaletteCg(31, 1, "CD01")
			checkPaletteCg(32, 2, "CD02")
			checkPaletteCg(33, 3, "CD03")
			checkPaletteCg(34, 4, "CD04")
			checkPaletteCg(37, 5, "CD07")
			checkPaletteCg(35, 6, "CD05")
			checkPaletteCg(36, 7, "CD06")
			checkPaletteCg(640, 8, "ED01")
			checkPaletteCg(650, 9, "ED02")
			checkPaletteCg(660, 10, "ED03")
			checkPaletteCg(670, 11, "ED04")
			checkPaletteCg(680, 12, "ED05")
		ElseIf (page == 1)
			checkPaletteCg(690, 1, "ED06")
			checkPaletteCg(700, 2, "ED07")
			checkPaletteCg(720, 3, "ED09")
			checkPaletteCg(730, 4, "ED10")
			checkPaletteCg(740, 5, "ED11")
			checkPaletteCg(750, 6, "ED12")
			checkPaletteCg(760, 7, "ED13")
			checkPaletteCg(790, 8, "ED16")
			checkPaletteCg(800, 9, "ED17")
			checkPaletteCg(810, 10, "ED18")
		ElseIf (page == 3)
			checkPaletteRecollect(13, 1, "REC_KA1")
			checkPaletteRecollect(14, 2, "REC_KA2")
			checkPaletteRecollect(15, 3, "REC_KA3")
		EndIf
	ElseIf (tagID == 4)
		cgNum := 19
		If (page == 0)
			checkPaletteCg(41, 1, "CE01")
			checkPaletteCg(42, 2, "CE02")
			checkPaletteCg(43, 3, "CE03")
			checkPaletteCg(44, 4, "CE04")
			checkPaletteCg(820, 5, "EE01")
			checkPaletteCg(830, 6, "EE02")
			checkPaletteCg(840, 7, "EE03")
			checkPaletteCg(850, 8, "EE04")
			checkPaletteCg(860, 9, "EE05")
			checkPaletteCg(870, 10, "EE06")
			checkPaletteCg(880, 11, "EE07")
			checkPaletteCg(890, 12, "EE08")
		ElseIf (page == 1)
			checkPaletteCg(910, 1, "EE10")
			checkPaletteCg(920, 2, "EE11")
			checkPaletteCg(930, 3, "EE12")
			checkPaletteCg(940, 4, "EE13")
			checkPaletteCg(970, 5, "EE16")
			checkPaletteCg(980, 6, "EE17")
			checkPaletteCg(990, 7, "EE18")
		ElseIf (page == 3)
			checkPaletteRecollect(16, 1, "REC_MT1")
			checkPaletteRecollect(17, 2, "REC_MT2")
			checkPaletteRecollect(18, 3, "REC_MT3")
		EndIf
	ElseIf (tagID == 5)
		cgNum := 21
		If (page == 0)
			checkPaletteCg(51, 1, "CF01")
			checkPaletteCg(52, 2, "CF02")
			checkPaletteCg(53, 3, "CF03")
			checkPaletteCg(54, 4, "CF04")
			checkPaletteCg(55, 5, "CF05")
			checkPaletteCg(56, 6, "CF06")
			checkPaletteCg(61, 7, "CG01")
			checkPaletteCg(62, 8, "CG02")
			checkPaletteCg(63, 9, "CG03")
			checkPaletteCg(71, 10, "CH01")
			checkPaletteCg(72, 11, "CH02")
			checkPaletteCg(74, 12, "CH04")
		ElseIf (page == 1)
			checkPaletteCg(77, 1, "CH07")
			checkPaletteCg(75, 2, "CH05")
			checkPaletteCg(76, 3, "CH06")
			checkPaletteCg(81, 4, "CJ01")
			checkPaletteCg(91, 5, "CK01")
			checkPaletteCg(1000, 6, "EZ01")
			checkPaletteCg(1030, 7, "EZ04")
			checkPaletteCg(1040, 8, "EZ05")
			checkPaletteCg(1050, 9, "EZ06")
		EndIf
	EndIf
	For i:=0 To (cgNum - 1)
		this.cgViewMan[i] := CgViewManager
	Next
EndFunc

Function AppreciationView::showCgLoop(Integer charID, Integer id)
	Integer fFlush := (cnfObj.screenEffect == 1)
	Integer index
	Integer length
	setupCgViewInfo(charID, id)
	index := 0
	length := this.cgViewMan[id].thumbInfo.GetLength()
	While (index < length)
		If (CheckCgFlag(this.cgViewMan[id].thumbInfo[index].flag))
			Break
		EndIf
		index += 1
	EndWhile
	showCg(this.cgViewMan[id].thumbInfo[index], true)
	hide()
	Integer CG_VIEW_MAX := this.cgViewMan.GetLength()
	WndSpriteCmd wscmd
	input.FlushJoyButtonPushed()
	While (true)
		GetCommand(wscmd, 33)
		If (IsUNK1)
		ElseIf (input.GetJoyButtonPushed(0) > 0)
			id -= 1
			index := true
			If (id < 0)
				id := CG_VIEW_MAX - 1
			EndIf
			setupCgViewInfo(charID, id)
			length := this.cgViewMan[id].thumbInfo.GetLength()
			While (true)
				index += 1
				If (index >= length)
					index := 0
					id -= 1
				EndIf
				If (id < 0)
					id := CG_VIEW_MAX - 1
				EndIf
				setupCgViewInfo(charID, id)
				length := this.cgViewMan[id].thumbInfo.GetLength()
				If (CheckCgFlag(this.cgViewMan[id].thumbInfo[index].flag))
					Break
				EndIf
			EndWhile
			showCg(this.cgViewMan[id].thumbInfo[index])
			input.FlushJoyButtonPushed()
		ElseIf (input.GetJoyButtonPushed(1) > 0)
			id += 1
			index := true
			If (id >= CG_VIEW_MAX)
				id := 0
			EndIf
			setupCgViewInfo(charID, id)
			length := this.cgViewMan[id].thumbInfo.GetLength()
			While (true)
				index += 1
				If (index >= length)
					index := 0
					id += 1
				EndIf
				If (id >= CG_VIEW_MAX)
					id := 0
				EndIf
				setupCgViewInfo(charID, id)
				length := this.cgViewMan[id].thumbInfo.GetLength()
				If (CheckCgFlag(this.cgViewMan[id].thumbInfo[index].flag))
					Break
				EndIf
			EndWhile
			showCg(this.cgViewMan[id].thumbInfo[index])
			input.FlushJoyButtonPushed()
		ElseIf (input.GetJoyButtonPushed(4) > 0)
			While (true)
				index += 1
				If (index >= length)
					index := false
					id += 1
				EndIf
				If (id >= CG_VIEW_MAX)
					id := 0
				EndIf
				setupCgViewInfo(charID, id)
				length := this.cgViewMan[id].thumbInfo.GetLength()
				If (CheckCgFlag(this.cgViewMan[id].thumbInfo[index].flag))
					Break
				EndIf
			EndWhile
			showCg(this.cgViewMan[id].thumbInfo[index])
			input.FlushJoyButtonPushed()
		ElseIf ((wscmd.strID == "ID_CLOSE") | (input.GetJoyButtonPushed(8) > 0))
			this.sprScroll.SetTransparency(256)
			input.FlushJoyButtonPushed()
		ElseIf (wscmd.strID == "ID_SCROLL")
			this.scrollT := (0.0 := this.sprScroll.GetHorzScrollPos("ID_SCROLL")) / 100
			Reference info
			info := this.cgViewMan[id].thumbInfo[index]
			Bezier2D bzPt
			bzPt.SetLinear(info.ptCg1.x, info.ptCg1.y, info.ptCg2.x, info.ptCg2.y)
			Vector2D pt
			pt := bzPt.pt(this.scrollT)
			adv.sprCg.MovePosition(-pt.x, -pt.y)
			input.FlushJoyButtonPushed()
		ElseIf ((input.GetJoyButtonPushed(2) > 0) & (this.fScroll == true))
			this.sprScroll.SetHorzScrollPos(this.sprScroll.GetHorzScrollPos("ID_SCROLL") - 10, "ID_SCROLL")
			this.scrollT := (0.0 := this.sprScroll.GetHorzScrollPos("ID_SCROLL")) / 100
			Reference info
			info := this.cgViewMan[id].thumbInfo[index]
			Bezier2D bzPt
			bzPt.SetLinear(info.ptCg1.x, info.ptCg1.y, info.ptCg2.x, info.ptCg2.y)
			Vector2D pt
			pt := bzPt.pt(this.scrollT)
			adv.sprCg.MovePosition(-pt.x, -pt.y)
			input.FlushJoyButtonPushed()
		ElseIf ((input.GetJoyButtonPushed(3) > 0) & (this.fScroll == true))
			this.sprScroll.SetHorzScrollPos(this.sprScroll.GetHorzScrollPos("ID_SCROLL") + 10, "ID_SCROLL")
			this.scrollT := (0.0 := this.sprScroll.GetHorzScrollPos("ID_SCROLL")) / 100
			Reference info
			info := this.cgViewMan[id].thumbInfo[index]
			Bezier2D bzPt
			bzPt.SetLinear(info.ptCg1.x, info.ptCg1.y, info.ptCg2.x, info.ptCg2.y)
			Vector2D pt
			pt := bzPt.pt(this.scrollT)
			adv.sprCg.MovePosition(-pt.x, -pt.y)
			input.FlushJoyButtonPushed()
		ElseIf (input.GetJoyButtonPushed(5) > 0)
			If ((this.fScroll == true) & (this.sprScroll.IsVisible() == false))
				this.sprScroll.SetTransparency(0)
			Else
				Break
			EndIf
			input.FlushJoyButtonPushed()
		EndIf
	EndWhile
	input.FlushJoyButtonPushed()
	show()
EndFunc

