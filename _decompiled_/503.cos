Function DebugCommandLine(Reference com)
	PUSH_VAR com
	CALL_METHOD MakeUpper
	NOP
	PUSH_VAL Integer 0i
	JUMP_OK _l_6
	JUMP _l_255
@_l_6:
	PUSH_VAR com
	PUSH_VAL String "ONFLAG"
	CALL_METHOD Find
	PUSH_VAL Integer -1i
	!=
	JUMP_OK _l_49

	INIT_LOCAL parent strNum
	PUSH_VAR com
	PUSH_VAL String "%t(%n)"
	PUSH_VAR strNum
	CALL_METHOD IsMatchUsage
	PUSH_VAL String ""
	==
	JUMP_OK _l_47

	INIT_LOCAL Integer i
	PUSH_VAL Integer 0i
	POP =
@_l_25:
	PUSH_VAR i
	PUSH_VAR strNum
	CALL_METHOD GetLength
	<=
	JUMP_OK _l_46
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	CALL_METHOD TrimLeft
	NOP
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	CALL StringToNum
	CALL OnFlag
	NOP
	PUSH_VAR i
	PUSH_VAL Integer 1i
	POP +=
	NOP
	JUMP _l_25
@_l_46:
	NOP
@_l_47:
	NOP
	JUMP _l_255
@_l_49:
	PUSH_VAR com
	PUSH_VAL String "OFFFLAG"
	CALL_METHOD Find
	PUSH_VAL Integer -1i
	!=
	JUMP_OK _l_92

	INIT_LOCAL parent strNum
	PUSH_VAR com
	PUSH_VAL String "%t(%n)"
	PUSH_VAR strNum
	CALL_METHOD IsMatchUsage
	PUSH_VAL String ""
	==
	JUMP_OK _l_90

	INIT_LOCAL Integer i
	PUSH_VAL Integer 0i
	POP =
@_l_68:
	PUSH_VAR i
	PUSH_VAR strNum
	CALL_METHOD GetLength
	<=
	JUMP_OK _l_89
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	CALL_METHOD TrimLeft
	NOP
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	CALL StringToNum
	CALL OffFlag
	NOP
	PUSH_VAR i
	PUSH_VAL Integer 1i
	POP +=
	NOP
	JUMP _l_68
@_l_89:
	NOP
@_l_90:
	NOP
	JUMP _l_255
@_l_92:
	PUSH_VAR com
	PUSH_VAL String "FLAG"
	CALL_METHOD Find
	PUSH_VAL Integer -1i
	!=
	JUMP_OK _l_154

	INIT_LOCAL parent strNum
	PUSH_VAR com
	PUSH_VAL String "%t(%n)"
	PUSH_VAR strNum
	CALL_METHOD IsMatchUsage
	PUSH_VAL String ""
	==
	JUMP_OK _l_152

	INIT_LOCAL Integer i
	PUSH_VAL Integer 0i
	POP =
@_l_111:
	PUSH_VAR i
	PUSH_VAR strNum
	CALL_METHOD GetLength
	<=
	JUMP_OK _l_151
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	CALL_METHOD TrimLeft
	NOP
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	CALL StringToNum
	CALL ChkFlagOn
	JUMP_OK _l_137
	PUSH_VAL String "Flag"
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	+
	PUSH_VAL String "-ON"
	+
	CALL Debug
	NOP
	JUMP _l_146
@_l_137:
	PUSH_VAL String "Flag"
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	+
	PUSH_VAL String "-OFF"
	+
	CALL Debug
	NOP
@_l_146:
	PUSH_VAR i
	PUSH_VAL Integer 1i
	POP +=
	NOP
	JUMP _l_111
@_l_151:
	NOP
@_l_152:
	NOP
	JUMP _l_255
@_l_154:
	PUSH_VAR com
	PUSH_VAL String "SCH"
	CALL_METHOD Find
	PUSH_VAL Integer -1i
	!=
	JUMP_OK _l_204

	INIT_LOCAL parent strNum
	PUSH_VAR com
	PUSH_VAL String "%t (%t)"
	PUSH_VAR strNum
	CALL_METHOD IsMatchUsage
	PUSH_VAL String ""
	==
	JUMP_OK _l_200

	INIT_LOCAL Integer i
	PUSH_VAL Integer 0i
	POP =
@_l_173:
	PUSH_VAR i
	PUSH_VAR strNum
	CALL_METHOD GetLength
	<=
	JUMP_OK _l_199
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	PUSH_VAL String "ã€€"
	PUSH_VAL String "  "
	CALL_METHOD Replace
	POP =
	NOP
	PUSH_VAR strNum
	PUSH_VAR i
	GET_FIELD_BY_OFFSET
	CALL StartDebugSearch
	NOP
	PUSH_VAR i
	PUSH_VAL Integer 1i
	POP +=
	NOP
	JUMP _l_173
@_l_199:
	NOP
@_l_200:
	CALL FlushJoyButton
	NOP
	NOP
	JUMP _l_255
@_l_204:
	PUSH_VAR com
	PUSH_VAL String ""
	!=
	JUMP_OK _l_250
	PUSH_VAR com
	PUSH_VAL String "TG"
	CALL_METHOD Find
	PUSH_VAL Integer -1i
	!=
	JUMP_OK _l_219
	PUSH_OBJ  37
	PUSH_VAR com
	POP =
	NOP
	JUMP _l_247
@_l_219:
	PUSH_VAR com
	PUSH_VAL Integer 0i
	CALL_METHOD Char
	PUSH_VAL Integer 83i
	==
	JUMP_OK _l_230
	PUSH_OBJ  37
	PUSH_VAR com
	POP =
	NOP
	JUMP _l_247
@_l_230:
	PUSH_VAR com
	PUSH_VAL String "00_"
	CALL_METHOD Find
	PUSH_VAL Integer -1i
	==
	JUMP_OK _l_243
	PUSH_OBJ  37
	PUSH_VAL String "00_"
	PUSH_VAR com
	+
	POP =
	NOP
	JUMP _l_247
@_l_243:
	PUSH_OBJ  37
	PUSH_VAR com
	POP =
	NOP
@_l_247:
	CALL EnterDebugJump
	NOP
	JUMP _l_255
@_l_250:
	PUSH_OBJ  27
	PUSH_VAL String "ID_DEBUGEDIT"
	PUSH_VAL String ""
	CALL_METHOD SetSpriteText
	NOP
@_l_255:
	PUSH_VAL Integer 0i
	Return
EndFunc

