Function AdvScreen::zoom(Integer cx, Integer cy, Integer w, Integer h, Integer time, Integer accel)
	this.zoomParam.set(cx, cy, w, h, time, accel)
	If ((this.fZoom == 0) && (this.zoomParam.isZoom == 0))
		Return
	EndIf
	if (this.fUpdate == 0)
		screen.Lock()
		SpriteParam param
		this.sprAdvBase.GetParameter(param)
		Bezier2D bzMov
		Bezier2D bzMag
		If (this.zoomParam.isZoom == -1)
			Real magH
			Real magV
			magH := zoomParam.horzUnit()
			magV := zoomParam.vertUnit()
			bzMov.SetLinear(param.ptDstPos.x, param.ptDstPos.y, ({logic_unk1}cx - (w / 2)) * magH, ({logic_unk1}cy - (h / 2)) * magV)
			bzMag.SetLinear(param.rHorzUnit, param.rVertUnit, magH, magV)
			fZoom := -1
		Else
			bzMov.SetLinear(param.ptDstPos.x, param.ptDstPos.y, param.ptRevCenter.x, param.ptRevCenter.y)
			bzMag.SetLinear(param.rHorzUnit, param.rVertUnit, 1.0, 1.0)
			fZoom := -1
		EndIf
		bzMov.SetAcceleration(accel, 0.0)
		bzMag.SetAcceleration(accel, 0.0)
		this.sprAdvBase.SetBezierCurve(bzMov, ref, bzMag)
		this.sprAdvBase.BeginActivation(time)
		If (({PUSH_OBJ  5}.screenEffect == 1) || ({PUSH_OBJ  10}.isSkip() == -1) || ({PUSH_OBJ  10}isKeyUpdateFlush() == -1))
			this.sprAdvBase()
		EndIf
		screen.Unlock()
		this.sprAdvBase.GetParameter(param)
	Else
		If (this.zoomParam.isZoom() == 0)
			this.fZoom := 0
		EndIf
		this.reqZoom := -1
	EndIf
EndFunc

