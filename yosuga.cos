Include "defs.cos"
@If	(__BUILD_ONE__ == 1)
Include "cotopha.ch"
Include	"structs.cos"
Include	"vars.cos"
Include	"AdvScreen.cos"
Include	"AppreciationView.cos"
Include	"bgm.cos"
Include	"BustupManager.cos"
Include	"ConfigDataBase.cos"
Include	"ConfigWindow.cos"
Include	"Debug.cos"
Include	"EyeCatch.cos"
Include	"Flag.cos"
Include	"HistoryWindow.cos"
Include	"init.cos"
Include	"Input.cos"
Include	"LogManager.cos"
Include	"MessageFrame.cos"
Include	"start_screens.cos"
Include	"SystemObject.cos"
Include	"LoadSaveWindow.cos"
Include	"utils.cos"
@Else
Include	"yosuga.ch"
@ENDIF

Function main()
	Initialize()
	;Try
		Starting()
	;Catch()
	;	screen.DetachAllSprite()
	;EndTry
	Postprocessing()
EndFunc

Function Initialize()
	Time time
	time := GetLocalTime()
	InitRandom(time.nMinute * time.nSecond * GetCurrentTime())
	frameSkin.LoadResource("frame.noa")
	InitScenarioData()
	LoadSystemData()
	LoadConfigData()
	If (0 == 0)
		screen.CreateDisplay(Reference, levelWindow)
	Else
		screen.CreateDisplay(Reference, levelWindow, 1024, 600)
	EndIf
	Integer optionalFlag := 0
	optionalFlag |= 2
	optionalFlag |= 16
	optionalFlag |= 64
	optionalFlag |= 128
	screen.SetOptionalFuncFlag(optionalFlag)
	Sleep(100)
	If (cnfObj.screenType == 0)
	Else
		ChangeDisplay(true)
	EndIf
	LoadInputFilter()
	OpenInputFilter()
	screen.ShowCursor(true)
	ScreenSize.w := 800
	ScreenSize.h := 600
	Real totalVolume := 0.0
	Resource rs
	rs.SetTotalVolume(0, totalVolume)
	rs.SetTotalVolume(1, totalVolume)
	rs.SetTotalVolume(2, totalVolume)
	rs.SetTotalVolume(3, totalVolume)
	If (IsDebug == true)
		CreateDebugWindow()
		ShowDebugWindow()
	EndIf
EndFunc

Function InitScenarioData()
	scObj.version := 200
	scObj.familyName := "ètì˙ñÏ"
	scObj.familyName_read := "Ç©Ç∑Ç™ÇÃ"
	scObj.firstName := "óI"
	scObj.firstName_read := "ÇÕÇÈÇ©"
	scObj.flag.create(512)
	scObj.flagBackup.create(512)
	scObj.nameLog.create(512)
	scObj.messLog.create(512)
	scObj.seqLog.create(512)
	scObj.voiceLog.create(512)
	Return
EndFunc

Function ChangeDisplay(Integer fFullscreen)
	If (fFullscreen == true)
        If (0 == true)
            screen.ChangeDisplaySize(800, 600)
        EndIf
        screen.ChangeCooperationLevel(levelFullScreen)
    Else
        screen.ChangeCooperationLevel(levelWindow)
        If (0 == true)
            screen.ChangeDisplaySize(1024, 600)
        EndIf
    EndIf
EndFunc

Function Starting()
	Integer ret := 5
	While (true)
		If (ret == 4)
			Break
		ElseIf (ret == 5)
			Logo()
			ret := 6
		ElseIf (ret == 6)
			ret := Title()
		ElseIf (ret == 1)
			ScenarioLoop("00_Z000")
			ret := 5
		ElseIf (ret == 2)
			ScenarioLoop(scObj.scenarioCall)
			ret := 5
		ElseIf (ret == 3)
			Appreciation()
			PlayBgm("BGM_01")
			ret := 6
		ElseIf (ret == 101)
			ScenarioLoop("VOICETEST")
		ElseIf (ret == 10)
			StopBgm()
			PlayMovie("opening.mei")
			ret := 6
		ElseIf (ret == 102)
			LeaveDebugJump()
			ScenarioLoop(GetDebugJumpScenario())
			ret := 5
		ElseIf (ret == 103)
			ScenarioLoop("s003")
			ret := 6
		ElseIf (ret == 11)
			ScenarioLoop("tg01")
			ret := 5
		Else
			Break
		EndIf
	EndWhile
EndFunc

Function Postprocessing()
	If (isCreateDebugWindow == true)
		File file
		file.Open("_exit.log", 5)
		file.DumpObject(scObj)
		file.Close()
	EndIf
	SaveSystemData()
	SaveConfigData()
EndFunc

Function ScenarioLoop(String func)
	StopBgm()
	SetupAdvScreen()
	Change(func)
	adv.setToneFilter("NORMAL")
	adv.setCg("BLACK")
	While (scObj.scenarioCall != "EXIT_SCENARIO")
		If (IsDebug == true)
			Debug("\\c;8888FF:Jump-" + scObj.scenarioCall + "\\c:")
		EndIf
		String tempCall
		tempCall := "sc" + scObj.scenarioCall
		tempCall := tempCall.Replace("-", "_")
		If (tempCall.Call() == true)
			Break
		EndIf
	EndWhile
	adv.setToneFilter("NORMAL")
	adv.hideMessage()
	adv.setCg("BLACK")
	adv.bustupClear()
	adv.update(false, true)
	StopVoice()
	StopSe()
	StopEnvSe()
	StopBgm(false)
	DestroyAdvScreen()
EndFunc

Function PlayMovie(String strFileName, Integer nFlags)
	MovieSprite movie
	If (!movie.OpenMovie(strFileName))
	;logic_unk3
		SpriteParam sp
		ImageInfo imginf
		screen.Lock()
		screen.AddSprite(0, movie)
		imginf := movie.GetInfo()
		movie.GetParameter(sp)
		sp.rHorzUnit := (0.0 := 800.0) / imginf.nImageWidth
		sp.rVertUnit := (0.0 := 600.0) / imginf.nImageHeight
		movie.SetParameter(sp)
		screen.Unlock()
		screen.ShowCursor(false)
		Integer nFlags := 1
		movie.PlayMovie(nFlags, false)
		WndSpriteCmd wscmd
		input.FlushJoyButtonPushed()
		While (movie.IsMoviePlaying())
			Sleep(100)
			If (input.GetJoyButtonPushed(4) && input.GetJoyButtonPushed(5))
			;math_UNK2
				Break
			EndIf
			If (!screen.GetCommand(wscmd, 100, 0))
			;logic_unk3
				Break
			EndIf
		EndWhile
		movie.StopMovie()
		screen.Lock()
		screen.DetachSprite(movie)
		screen.UpdateRect()
		screen.Unlock()
		screen.ShowCursor(true)
		movie.CloseMovie()
	EndIf
EndFunc

Function Change(String str)
	str.MakeUpper()
	scObj.scenarioCall := str
EndFunc

Function CheckPlayVoice(String trueName)
	Integer cnfId
	If (cnfObj.voiceDetails[0] == true)
        cnfId.SetBit(4)
    EndIf
	If (cnfObj.voiceDetails[1] == true)
        cnfId.SetBit(2)
    EndIf
	If (cnfObj.voiceDetails[2] == true)
        cnfId.SetBit(3)
    EndIf
	If (cnfObj.voiceDetails[3] == true)
        cnfId.SetBit(5)
    EndIf
	If (cnfObj.voiceDetails[4] == true)
        cnfId.SetBit(6)
    EndIf
	If (cnfObj.voiceDetails[5] == true)
        cnfId.SetBit(9)
    EndIf
	If (cnfObj.voiceDetails[6] == true)
        cnfId.SetBit(8)
    EndIf
	If (cnfObj.voiceDetails[7] == true)
        cnfId.SetBit(7)
    EndIf
	If (cnfObj.voiceDetails[8] == true)
        cnfId.SetBit(24)
    EndIf
	trueName := trueName.Replace("óI", "")
	trueName := trueName.Replace("Åï", "")
	Integer fPlayVoice := true
	If ((trueName.Find("‚u") != true) & (fPlayVoice == true))
        fPlayVoice := (cnfId.TestBit(4) == true)
    EndIf
	If ((trueName.Find("âl") != true) & (fPlayVoice == true))
        fPlayVoice := (cnfId.TestBit(2) == true)
    EndIf
	If ((trueName.Find("ìﬁèè") != true) & (fPlayVoice == true))
        fPlayVoice := (cnfId.TestBit(3) == true)
    EndIf
	If ((trueName.Find("àÍót") != true) & (fPlayVoice == true))
        fPlayVoice := (cnfId.TestBit(5) == true)
    EndIf
	If ((trueName.Find("èââ¿") != true) & (fPlayVoice == true))
        fPlayVoice := (cnfId.TestBit(6) == true)
    EndIf
	If ((trueName.Find("àœàıí∑") != true) & (fPlayVoice == true))
        fPlayVoice := (cnfId.TestBit(9) == true)
    EndIf
	If ((trueName.Find("Ç‚Ç–ÇÎ") != true) & (fPlayVoice == true))
        fPlayVoice := (cnfId.TestBit(8) == true)
    EndIf
	If ((trueName.Find("ó∫ïΩ") != true) & (fPlayVoice == true))
        fPlayVoice := (cnfId.TestBit(7) == true)
    EndIf
	trueName := trueName.Replace("‚u", "")
	trueName := trueName.Replace("âl", "")
	trueName := trueName.Replace("ìﬁèè", "")
	trueName := trueName.Replace("àÍót", "")
	trueName := trueName.Replace("èââ¿", "")
	trueName := trueName.Replace("àœàıí∑", "")
	trueName := trueName.Replace("Ç‚Ç–ÇÎ", "")
	trueName := trueName.Replace("ó∫ïΩ", "")
	If ((trueName != "") & (fPlayVoice == true))
        fPlayVoice := (cnfId.TestBit(24) == true)
    EndIf
	Return fPlayVoice
EndFunc

Function ClearEffectParameter(Reference param)
	param.strType := "Nothing"
	param.nFlags := 0
	param.nInterval := 0
	param.nDegreeStep := 0
	param.nShakingWidth := 0
	param.nMeshSize := 0
	param.nFrequency := 0
	param.sizeView := ISize(0, 0)
	param.ptSpeed := IPoint(0, 0)
	param.nAlphaRange := 0
	param.nMilliSecPerDegree := 0
	param.ptSmashPoint := IPoint(0, 0)
	param.rSmashPower := 0.0
	param.rRandomPower := 0.0
	param.rDeceleration := 0.0
	param.vVelocity := IVector(0, 0, 0)
	param.vGravity := IVector(0, 0, 0)
	param.vRevSpeed := IVector(0, 0, 0)
	param.vRevRandom := IVector(0, 0, 0)
EndFunc

Function DestroyAdvScreen()
	Debug("+-DestroyAdvScreen-+")
	adv.destroy()
EndFunc

Function EnterLoad()
	scObj.isLoad := true
	scObj.hitretCountTemp := 0
	scObj.selectCount := 0
	adv.msgInfo.clear()
EndFunc

Function LeaveLoad()
	scObj.isLoad := false
	adv.flushUpdate()
	If (scObj.playBgm != "")
		PlayBgm(scObj.playBgm)
		If (scObj.fPauseBgm == true)
			PauseBgm()
		EndIf
	EndIf
	Integer i := 0
	While (i < scObj.playEnvSe.GetLength())
		PlayEnvSe(scObj.playEnvSe[i])
		i += 1
	EndWhile
	adv.messageView(scObj.viewType)
	adv.msgFrame.clearPage()
	String showName
	String trueName
	CheckTrueName(scObj.nameLog.get(0), showName, trueName)
	adv.msgFrame.output(showName, scObj.seqLog.get(0) + scObj.messLog.get(0), true)
	If (scObj.voiceLog.get(0) != "")
		adv.msgFrame.showVoice()
	Else
		adv.msgFrame.hideVoice()
	EndIf
	adv.msgFrame.show(true)
	adv.skip(false)
	adv.autoMode(false)
	If (scObj.fToneFilter == true)
		adv.setToneFilter(scObj.toneFilter)
	Else
		adv.setToneFilter("NORMAL")
	EndIf
	If (scObj.fCgRGB == 0)
		SetCg(scObj.cg.filename, scObj.cg.pt.x, scObj.cg.pt.y)
	Else
		Integer col := scObj.colSetCgRGB
		SetCgRGB((col & 16711680).ShiftRight(16), (col & 65280).ShiftRight(8), (col & 255))
	EndIf
	i := 0
	While (i < scObj.bustup.GetLength())
		Reference info := scObj.bustup[i]
		If (info.status != 0)
			If (info.fPosFix == 0)
				SetBustup(info.basename, -info.pos, info.priority)
			Else
				SetBustup(info.basename, info.pos, info.priority)
			EndIf
			If (info.basePosition.y != info.localPosition.y)
				adv.bustupDown(info.id, info.localPosition.y - info.basePosition.y)
			EndIf
		EndIf
		i += 1
	EndWhile
	If (scObj.fZoom == true)
		Reference param
		param := scObj.zoomParam
		adv.zoom(scObj.zoomParam.pt.x, scObj.zoomParam.pt.y, scObj.zoomParam.size.w, scObj.zoomParam.size.h)
	Else
		adv.zoom(0, 0, 800, 600)
	EndIf
	adv.update(true)
	HideLoadEffect()
	If (scObj.voiceLog.get(0) != "")
		If (CheckPlayVoice(trueName) == true)
			PlayVoice(scObj.voiceLog.get(0))
		EndIf
	EndIf
EndFunc

Function EnterRecollectMode()
	flgRecollectMode := true
EndFunc

Function HideLoadEffect()
	sprLoadEffectBase.SetBlendingEnvelope(256)
	sprLoadEffectBase.BeginActivation(300)
	WaitUntilSpriteActive(sprLoadEffectBase, 0)
	screen.DetachSprite(sprLoadEffectBase)
	sprLoadEffect.Release()
	sprLoadEffectBase.Release()
	resLoadEffectAlpha.Release()
EndFunc

Function HideVoicePlayIndicator()
EndFunc

Function IsGameClear()
	Return sysObj.gameClear
EndFunc

Function IsHitRect(Reference rect, Integer x, Integer y)
	If ((rect.left <= x) & (x < rect.right) & (rect.top <= y) & (y < rect.bottom))
		Return true
	EndIf
	Return false
EndFunc

Function IsHitSprite(Reference spr, Integer x, Integer y)
	Rect rect
	rect := spr.GetRectangle()
	Return IsHitRect(rect, x, y)
EndFunc

Function IsLoad()
	Return scObj.isLoad
EndFunc

Function IsRecollectMode()
	Return flgRecollectMode
EndFunc

Function Jump(Integer id)
	If (IsLoad() == true)
		Return
	EndIf
	adv.bustupJump(id)
EndFunc

Function LeaveRecollectMode()
	flgRecollectMode := false
EndFunc

Function Load(String filename)
	Debug("Load:" + filename)
	StopBgm()
	StopEnvSe()
	StopSe()
	StopVoice()
	File file
	file.Open(filename + ".dat", 2)
	Integer ret := file.LoadObject(scObj)
	file.Close()
	If ((ret == false) & (200 == scObj.version))
		ShowLoadEffect()
		EnterLoad()
	Else
		Confirm("ÉZÅ[ÉuÉfÅ[É^Ç…àŸèÌÇ™Ç†ÇËÅAÉQÅ[ÉÄÇèIóπÇµÇ‹Ç∑ÅB", false, false, 5000)
		screen.Lock()
		Throw()
	EndIf
EndFunc

Function IsHScene(String str)
	If (IsUNK1)
	ElseIf (str.Find("EA10") != true)
	ElseIf (str.Find("EA11") != true)
	ElseIf (str.Find("EA12") != true)
	ElseIf (str.Find("EA13") != true)
	ElseIf (str.Find("EA16") != true)
	ElseIf (str.Find("EA17") != true)
	ElseIf (str.Find("EB01") != true)
	ElseIf (str.Find("EB10") != true)
	ElseIf (str.Find("EB11") != true)
	ElseIf (str.Find("EB12") != true)
	ElseIf (str.Find("EB13") != true)
	ElseIf (str.Find("EB16") != true)
	ElseIf (str.Find("EB17") != true)
	ElseIf (str.Find("EC10") != true)
	ElseIf (str.Find("EC11") != true)
	ElseIf (str.Find("EC12") != true)
	ElseIf (str.Find("EC13") != true)
	ElseIf (str.Find("EC16") != true)
	ElseIf (str.Find("EC17") != true)
	ElseIf (str.Find("ED10") != true)
	ElseIf (str.Find("ED11") != true)
	ElseIf (str.Find("ED12") != true)
	ElseIf (str.Find("ED13") != true)
	ElseIf (str.Find("ED16") != true)
	ElseIf (str.Find("ED17") != true)
	ElseIf (str.Find("EE10") != true)
	ElseIf (str.Find("EE11") != true)
	ElseIf (str.Find("EE12") != true)
	ElseIf (str.Find("EE13") != true)
	ElseIf (str.Find("EE16") != true)
	ElseIf (str.Find("EE17") != true)
	Else
		Return false
	EndIf
	Return true
EndFunc

Function OffGameClear()
	sysObj.gameClear := false
	SaveSystemData()
EndFunc

Function OnGameClear()
	sysObj.gameClear := true
	SaveSystemData()
EndFunc

Function OpeningMovie()
	Hide()
	SetCg("BLACK")
	Transition("", 1000)
	Update()
	DestroyAdvScreen()
	PlayMovie("opening.mei")
	SetupAdvScreen()
	sysObj.viewOpeningMovie := true
EndFunc

Function Quake(Integer w, Integer h, Integer fWhole, Integer count, Integer time)
	If (IsLoad() == true)
		Return
	EndIf
	Integer fFlush := adv.isKeyUpdateFlush()
	If (fFlush == true)
		Return
	EndIf
	adv.effectQuake(w, h, fWhole, count, time)
EndFunc

Function Scroll(Integer x, Integer y, Integer time, Integer accel, Integer fWait)
	If (IsLoad() == true)
		Return
	EndIf
	adv.scroll(x, y, time, accel, fWait)
EndFunc

Function Sepia(Integer flag)
	If (IsLoad() == true)
		Return
	EndIf
	If (flag != 0)
		adv.setToneFilter("SEPIA")
	Else
		adv.setToneFilter("NORMAL")
	EndIf
EndFunc

Function Show(Integer fWait)
	If (IsLoad() == true)
		Return
	EndIf
	adv.showMessage(0, fWait)
EndFunc

Function ShowCursor(Integer fShow)
	screen.ShowCursor(fShow)
EndFunc

Function StartSelect()
	Return adv.startSelect()
EndFunc

Function Update(Integer fFlush)
	If (IsLoad() == true)
		Return
	EndIf
	fFlush |= adv.isKeyUpdateFlush()
	adv.update(fFlush)
	adv.waitUpdate(fFlush)
EndFunc

Function WindowView(Integer type)
	adv.messageView(type)
EndFunc

Function NormalLoad(Integer id)
	If ((0 <= id) & (id < 60))
		Load("Save" + CreateNumString(id, 3, true))
	EndIf
EndFunc

