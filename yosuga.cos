Include	"yosuga.ch"

Function main()
	Initialize()
	Try
		Starting()
	Catch()
		screen.DetachAllSprite()
	EndTry
	Postprocessing()
EndFunc

Function Initialize()
	Time time
	time := GetLocalTime()
	InitRandom(time.nMinute * time.nSecond * GetCurrentTime())
	frameSkin.LoadResource("frame.noa")
	InitScenarioData()
	LoadSystemData()
	LoadConfigData()
	If (0 == 0)
		screen.CreateDisplay(Reference, levelWindow)
	Else
		screen.CreateDisplay(Reference, levelWindow, 1024, 600)
	EndIf
	Integer optionalFlag := 0
	optionalFlag |= 2
	optionalFlag |= 16
	optionalFlag |= 64
	optionalFlag |= 128
	screen.SetOptionalFuncFlag(optionalFlag)
	Sleep(100)
	If (cnfObj.screenType == 0)
	Else
		ChangeDisplay(true)
	EndIf
	LoadInputFilter()
	OpenInputFilter()
	screen.ShowCursor(true)
	ScreenSize.w := 800
	ScreenSize.h := 600
	Real totalVolume := 0.0
	Resource rs
	rs.SetTotalVolume(0, totalVolume)
	rs.SetTotalVolume(1, totalVolume)
	rs.SetTotalVolume(2, totalVolume)
	rs.SetTotalVolume(3, totalVolume)
	If (IsDebug)
		CreateDebugWindow()
		ShowDebugWindow()
	EndIf
EndFunc

Function InitRandom(Integer seed)	; OK
	nRandomSeed := seed
EndFunc

Function InitScenarioData()
	scObj.version := 200
	scObj.familyName := "ètì˙ñÏ"
	scObj.familyName_read := "Ç©Ç∑Ç™ÇÃ"
	scObj.firstName := "óI"
	scObj.firstName_read := "ÇÕÇÈÇ©"
	scObj.flag.create(512)
	scObj.flagBackup.create(512)
	scObj.nameLog.create(512)
	scObj.messLog.create(512)
	scObj.seqLog.create(512)
	scObj.voiceLog.create(512)
	Return
EndFunc

Function ChangeDisplay(Integer fFullscreen)
	If (fFullscreen == true)
        If (0 == true)
            screen.ChangeDisplaySize(800, 600)
        EndIf
        screen.ChangeCooperationLevel(levelFullScreen)
    Else
        screen.ChangeCooperationLevel(levelWindow)
        If (0 == true)
            screen.ChangeDisplaySize(1024, 600)
        EndIf
    EndIf
EndFunc

Function LoadInputFilter()
	input.LoadInputFilter("input.xml")
EndFunc

Function OpenInputFilter()
	input.OpenFilter(1)
	FlushInputQueue()
EndFunc

Function CreateDebugWindow()
	If (isCreateDebugWindow == true)
		Return
	EndIf
	debugSkin.LoadResource("debug.noa")
	debugLog.create(16)
	Integer width := 224
	debugSkin.CreateFormPage(debugFrame, "ID_PAGE_DEBUG")
	debugBase.CreateSprite(1, width, ScreenSize.h)
	debugFrame.SetFocus("ID_EDIT")
	debugMes.CreateMessage(width, 16 * 16 + 4)
	debugMes.AttachMessageStyle(debugSkin, "ID_FONT_INFO")
	debugFrame.SetTransparency(128)
	Size size
	size := screen.GetDisplaySize()	;TODO
	debugFrame.MovePosition(ScreenSize.w, 300)
	debugBase.MovePosition(ScreenSize.w, 0)
	debugMes.MovePosition(ScreenSize.w + 4, 4)
	If (IsDebug == true)
		sprVoicePlayingBar.AttachImage(debugSkin.ID_SELECT3)
		sprVoicePlayingBar.MovePosition(DEBUG_VOICECHECK_X, DEBUG_VOICECHECK_Y)
		sprVoicePlayingTrim.AttachImage(debugSkin.ID_TRIM)
		sprVoicePlayingTrim.MovePosition(DEBUG_VOICECHECK_X + 7, DEBUG_VOICECHECK_Y)
	EndIf
	If (IsDebug == true)
		screen.AddSprite(3, sprVoicePlayingTrim)
		screen.AddSprite(5, sprVoicePlayingBar)
	EndIf
	screen.AddSprite(5, debugFrame)
	screen.AddSprite(10, debugMes)
	screen.AddSprite(15, debugBase)
	isCreateDebugWindow := true
EndFunc

Function ShowDebugWindow()
	If (isCreateDebugWindow == false)
		Return
	EndIf
	debugFrame.SetVisible(true)
	debugBase.SetVisible(true)
	debugMes.SetVisible(true)
EndFunc

Function Starting()
	Integer ret := 5
	While (true)
		If (ret == 4)
			Break
		ElseIf (ret == 5)
			Logo()
			ret := 6
		ElseIf (ret == 6)
			ret := Title()
		ElseIf (ret == 1)
			ScenarioLoop("00_Z000")
			ret := 5
		ElseIf (ret == 2)
			ScenarioLoop(scObj.scenarioCall)
			ret := 5
		ElseIf (ret == 3)
			Appreciation()
			PlayBgm("BGM_01")
			ret := 6
		ElseIf (ret == 101)
			ScenarioLoop("VOICETEST")
		ElseIf (ret == 10)
			StopBgm()
			PlayMovie("opening.mei")
			ret := 6
		ElseIf (ret == 102)
			LeaveDebugJump()
			ScenarioLoop(GetDebugJumpScenario())
			ret := 5
		ElseIf (ret == 103)
			ScenarioLoop("s003")
			ret := 6
		ElseIf (ret == 11)
			ScenarioLoop("tg01")
			ret := 5
		Else
			Break
		EndIf
	EndWhile
EndFunc

Function Postprocessing()
	If (isCreateDebugWindow == true)
		File file
		file.Open("_exit.log", 5)
		file.DumpObject(scObj)
		file.Close()
	EndIf
	SaveSystemData()
	SaveConfigData()
EndFunc

Function LoadObject(String path, Reference object)
	File file
	If (file.Open(path))
		Return 1
	EndIf
	Return (file.LoadObject(object))
EndFunc

Function FlushInputQueue()
	If (inputFilterType == 0)
		input.FlushInputQueue(256)
	Else
		inputE.FlushInputQueue(256)
	EndIf
EndFunc

Function ScenarioLoop(String func)
	StopBgm()
	SetupAdvScreen()
	Change(func)
	adv.setToneFilter("NORMAL")
	adv.setCg("BLACK")
	While (scObj.scenarioCall != "EXIT_SCENARIO")
		If (IsDebug == true)
			Debug("\\c;8888FF:Jump-" + scObj.scenarioCall + "\\c:")
		EndIf
		String tempCall
		tempCall := "sc" + scObj.scenarioCall
		tempCall := tempCall.Replace("-", "_")
		If (tempCall.Call() == true)
			Break
		EndIf
	EndWhile
	adv.setToneFilter("NORMAL")
	adv.hideMessage()
	adv.setCg("BLACK")
	adv.bustupClear()
	adv.update(false, true)
	StopVoice()
	StopSe()
	StopEnvSe()
	StopBgm(false)
	DestroyAdvScreen()
EndFunc

Function PlayBgm(String file, Integer fNonFade)
	file.MakeUpper()
	If (IsPlayBgm() && (bgm[bgmIndex].filename == file))
		Return
	EndIf
	If (IsPlayBgm())
		StopBgm(fNonFade)
	Endif
	Debug("BGM-" + file)
	If (bgmIndex == 0)
		bgmIndex := 1
	Else
		bgmIndex := 0
	EndIf
	bgm[bgmIndex].filename := file
	SetBgmInfo(bgm[bgmIndex])
	bgm[bgmIndex].fPause := 0
	If (cnfObj.flgPlayBgm == true)
		bgm[bgmIndex].fPlaying := true
	Else
		bgm[bgmIndex].fPlaying := false
		Return
	EndIf
	bgm[bgmIndex].res.LoadSound(file + ".mio", true)
	If (fNonFade == false)
		bgm[bgmIndex].res.SetVolume(0.0, 0.0)
		bgm[bgmIndex].res.PlayFrom(false, bgm[bgmIndex].endPos, true, bgm[bgmIndex].rewindPos, false)
		Bezier2D bzVol
		bzVol.SetLinear(0.0, 0.0, cnfObj.volBgm, cnfObj.volBgm)
		bgm[bgmIndex].res.SetVolumeEnvelope(bzVol, 2000)
	Else
		bgm[bgmIndex].res.SetVolume(cnfObj.volBgm, cnfObj.volBgm)
		bgm[bgmIndex].res.PlayFrom(false, bgm[bgmIndex].endPos, true, bgm[bgmIndex].rewindPos, false)
	EndIf
EndFunc

Function StopBgm(Integer fNonFade, Integer fConfigStop)
	Debug("BGM-STOP")
	If (fNonFade == false)
		Bezier2D bzVol
		Real leftVol
		Real rightVol
		bgm[bgmIndex].res.GetVolume(leftVol, rightVol)
		bzVol.SetLinear(leftVol, rightVol, 0.0, 0.0)
		bgm[bgmIndex].res.SetVolumeEnvelope(bzVol, 3000)
		bgm[bgmIndex].fEndingProcess := true
	EndIf
	If (fNonFade != false)
		bgm[bgmIndex].res.Stop()
		bgm[bgmIndex].res.Release()
	EndIf
	bgm[bgmIndex].fPlaying := 0
	If (fConfigStop == false)
		bgm[bgmIndex].filename := ""
	EndIf
EndFunc

Function PlayMovie(String strFileName, Integer nFlags)
	MovieSprite movie
	If (!movie.OpenMovie(strFileName))
	;logic_unk3
		SpriteParam sp
		ImageInfo imginf
		screen.Lock()
		screen.AddSprite(0, movie)
		imginf := movie.GetInfo()
		movie.GetParameter(sp)
		sp.rHorzUnit := (0.0 := 800.0) / imginf.nImageWidth
		sp.rVertUnit := (0.0 := 600.0) / imginf.nImageHeight
		movie.SetParameter(sp)
		screen.Unlock()
		screen.ShowCursor(false)
		Integer nFlags := 1
		movie.PlayMovie(nFlags, false)
		WndSpriteCmd wscmd
		input.FlushJoyButtonPushed()
		While (movie.IsMoviePlaying())
			Sleep(100)
			If (input.GetJoyButtonPushed(4) && input.GetJoyButtonPushed(5))
			;math_UNK2
				Break
			EndIf
			If (!screen.GetCommand(wscmd, 100, 0))
			;logic_unk3
				Break
			EndIf
		EndWhile
		movie.StopMovie()
		screen.Lock()
		screen.DetachSprite(movie)
		screen.UpdateRect()
		screen.Unlock()
		screen.ShowCursor(true)
		movie.CloseMovie()
	EndIf
EndFunc

Function Change(String str)
	str.MakeUpper()
	scObj.scenarioCall := str
EndFunc

Function AddjustString(String src, Integer num)
	Integer length := src.GetLength()
	If (length <= num)
		Return src
	EndIf
	String temp
	Integer i := 0
	While (i + num < length)
		temp += src.Middle(i, num) + "\n"
		i += num
	EndWhile
	If (i < length)
		temp += src.Middle(i, num)
	EndIf
	Return temp
EndFunc

Function AskGameExit()
	If (Confirm("ÉQÅ[ÉÄÇèIóπÇµÇ‹Ç∑", true))
		screen.Lock()
		Throw()
	EndIf
EndFunc

Function BlackOut(Integer wait, Integer fHide)
	If (fHide != false)
		Hide()
	EndIf
	If (wait == 0)
		wait := 1000
	EndIf
	SetCg("black")
	Transition("", wait)
	Update()
EndFunc

Function Bookmark::init()
	this.fSave := 0
	this.comment := ""
	this.time.nYear := 0
	this.time.nMonth := 0
	this.time.nDay := 0
	this.time.nWeek := 0
	this.time.nHour := 0
	this.time.nMinute := 0
	this.time.nSecond := 0
EndFunc

Function CgInfo::clear()
	this.timeZone := 0
	this.filename := ""
	this.pt := IPoint(0, 0)
	this.effectParam.strType := "Nothing"
EndFunc

Function CheckBu(Reference src, String filename, Integer baseFlag, Integer flag)
	If (src.Find(filename) != -1)
        If (baseFlag != 0)
            SetCgFlag(baseFlag)
            SetCgFlag(flag)
        EndIf
        Return -1
    EndIf
    Return 0
EndFunc

Function CheckCg(Reference src, String filename, Integer baseFlag, Integer flag)
	If (src == filename)
        If (baseFlag != 0)
            SetCgFlag(baseFlag)
            SetCgFlag(flag)
        EndIf
        Return -1
    EndIf
    Return 0
EndFunc

Function CheckCgFlag(Integer id)
	If ((1 <= id) & (id < 4096))
        Return sysObj.cgFlag.check(id)
    EndIf
    Return 0
EndFunc

Function CheckPlayVoice(String trueName)
	Integer cnfId
	If (cnfObj.voiceDetails[0] == -1)
        cnfId.SetBit(4)
    EndIf
	If (cnfObj.voiceDetails[1] == -1)
        cnfId.SetBit(2)
    EndIf
	If (cnfObj.voiceDetails[2] == -1)
        cnfId.SetBit(3)
    EndIf
	If (cnfObj.voiceDetails[3] == -1)
        cnfId.SetBit(5)
    EndIf
	If (cnfObj.voiceDetails[4] == -1)
        cnfId.SetBit(6)
    EndIf
	If (cnfObj.voiceDetails[5] == -1)
        cnfId.SetBit(9)
    EndIf
	If (cnfObj.voiceDetails[6] == -1)
        cnfId.SetBit(8)
    EndIf
	If (cnfObj.voiceDetails[7] == -1)
        cnfId.SetBit(7)
    EndIf
	If (cnfObj.voiceDetails[8] == -1)
        cnfId.SetBit(24)
    EndIf
	trueName := trueName.Replace("óI", "")
	trueName := trueName.Replace("Åï", "")
	Integer fPlayVoice := -1
	If ((trueName.Find("‚u") != -1) & (fPlayVoice == -1))
        fPlayVoice := (cnfId.TestBit(4) == -1)
    EndIf
	If ((trueName.Find("âl") != -1) & (fPlayVoice == -1))
        fPlayVoice := (cnfId.TestBit(2) == -1)
    EndIf
	If ((trueName.Find("ìﬁèè") != -1) & (fPlayVoice == -1))
        fPlayVoice := (cnfId.TestBit(3) == -1)
    EndIf
	If ((trueName.Find("àÍót") != -1) & (fPlayVoice == -1))
        fPlayVoice := (cnfId.TestBit(5) == -1)
    EndIf
	If ((trueName.Find("èââ¿") != -1) & (fPlayVoice == -1))
        fPlayVoice := (cnfId.TestBit(6) == -1)
    EndIf
	If ((trueName.Find("àœàıí∑") != -1) & (fPlayVoice == -1))
        fPlayVoice := (cnfId.TestBit(9) == -1)
    EndIf
	If ((trueName.Find("Ç‚Ç–ÇÎ") != -1) & (fPlayVoice == -1))
        fPlayVoice := (cnfId.TestBit(8) == -1)
    EndIf
	If ((trueName.Find("ó∫ïΩ") != -1) & (fPlayVoice == -1))
        fPlayVoice := (cnfId.TestBit(7) == -1)
    EndIf
	trueName := trueName.Replace("‚u", "")
	trueName := trueName.Replace("âl", "")
	trueName := trueName.Replace("ìﬁèè", "")
	trueName := trueName.Replace("àÍót", "")
	trueName := trueName.Replace("èââ¿", "")
	trueName := trueName.Replace("àœàıí∑", "")
	trueName := trueName.Replace("Ç‚Ç–ÇÎ", "")
	trueName := trueName.Replace("ó∫ïΩ", "")
	If ((trueName != "") & (fPlayVoice == -1))
        fPlayVoice := (cnfId.TestBit(24) == true)
    EndIf
	Return fPlayVoice
EndFunc

Function CheckTrueName(Reference aliasName, Reference showName, Reference trueName)
	String strTemp
	strTemp := aliasName
	Integer index := strTemp.Find("Ås")
	If (index != -1)
        showName := strTemp.Left(index)
        Integer iRight := strTemp.Find("Åt")
        trueName := strTemp.Middle(index + 1, iRight - index - 1)
    Else
        trueName := strTemp
        showName :=strTemp
    EndIf
	If (strTemp == "")
	ElseIf (showName == "åÍÇË")
        showName := ""
	ElseIf (showName == "êSÇÃê∫")
        showName := ""
	ElseIf(showName == "ÉÇÉmÉçÅ[ÉO")
        showName := ""
    EndIf
EndFunc

Function ChkFlag(Integer i)
	Return ChkFlagOn(i)
EndFunc

Function ChkFlagOff(Integer i)
	If ((1 <= i) & (i < 512))
        Return (scObj.flag.check(i) == 0)
    EndIf
    Return 0
EndFunc

Function ChkFlagOn(Integer i)
	If ((1 <= i) & (i < 512))
        Return scObj.flag.check(i)
    EndIf
    Return 0
EndFunc

Function ChkGlobalFlagOn(Integer i)
	If ((1 <= i) & (i < 128))
        Return sysObj.globalScFlag.check(i)
    EndIf
    Return 0
EndFunc

Function ChkRecollectFlag(Integer i)
	If ((1 <= i) & (i < 32))
        Return sysObj.recollectFlag.check(i)
    EndIf
    Return 0
EndFunc

